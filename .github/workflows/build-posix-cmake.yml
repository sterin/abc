on: [push]

jobs:

  build-posix:
    strategy:
      matrix:
        os: [macos-latest]
        use_namespace: [false]

    runs-on: ${{ matrix.os }}

    env:
      CMAKE_ARGS: ${{ matrix.use_namespace && '-DABC_USE_NAMESPACE=xxx' || '' }}
      DEMO_ARGS: ${{ matrix.use_namespace && '-DABC_NAMESPACE=xxx' || '' }}
      DEMO_GCC: ${{ matrix.use_namespace && 'g++ -x c++' || 'gcc' }}

    steps:

    - name: Git Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install brew dependencies
      run: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew install readline ninja
      if: ${{ contains(matrix.os, 'macos') }}

    - name: Install APT dependencies
      run: |
        sudo apt install -y libreadline-dev ninja-build
      if: ${{ !contains(matrix.os, 'macos') }}

    - name: Configure CMake
      run: |
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ${CMAKE_ARGS} -B build

    - name: Build CMake
      run: |
        mkdir staging
        cmake --build build | tee /dev/stderr | python xxx.py
        cp /Users/runner/Library/Logs/DiagnosticReports/*.crash staging/
        echo OK

    - name: Upload pacakge artifact
      uses: actions/upload-artifact@v1
      with:
        name: package
        path: staging/
